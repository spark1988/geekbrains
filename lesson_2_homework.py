#!/usr/bin/env python
# coding: utf-8

# 
# # Тема “Визуализация данных в Matplotlib”
# 

# Задание 1
# Загрузите модуль pyplot библиотеки matplotlib с псевдонимом plt, а также библиотеку numpy с псевдонимом np.
# Примените магическую функцию %matplotlib inline для отображения графиков в Jupyter Notebook и настройки конфигурации ноутбука со значением 'svg' для более четкого отображения графиков.
# Создайте список под названием x с числами 1, 2, 3, 4, 5, 6, 7 и список y с числами 3.5, 3.8, 4.2, 4.5, 5, 5.5, 7.
# С помощью функции plot постройте график, соединяющий линиями точки с горизонтальными координатами из списка x и вертикальными - из списка y.
# Затем в следующей ячейке постройте диаграмму рассеяния (другие названия - диаграмма разброса, scatter plot).
# 

# In[64]:


from matplotlib import pyplot as plt


# In[72]:


import numpy as np


# In[73]:


import pandas as pd


# In[66]:


get_ipython().run_line_magic('matplotlib', 'inline')


# In[67]:


get_ipython().run_line_magic('config', "InlineBackend.figure_format = 'svg'")


# In[68]:


x = np.array([1, 2, 3, 4, 5, 6, 7])
y = np.array([3.5, 3.8, 4.2, 4.5, 5, 5.5, 7])
x, y


# In[69]:


plt.plot(x, y)


# In[70]:


plt.scatter(x, y)


# # Задание 2
# 

# С помощью функции linspace из библиотеки Numpy создайте массив t из 51 числа от 0 до 10 включительно.
# 
# Создайте массив Numpy под названием f, содержащий косинусы элементов массива t.
# 
# Постройте линейную диаграмму, используя массив t для координат по горизонтали,а массив f - для координат по вертикали. Линия графика должна быть зеленого цвета.
# 
# Выведите название диаграммы - 'График f(t)'. Также добавьте названия для горизонтальной оси - 'Значения t' и для вертикальной - 'Значения f'.
# 
# Ограничьте график по оси x значениями 0.5 и 9.5, а по оси y - значениями -2.5 и 2.5.
# 

# In[26]:


t = np.linspace(0, 10, 51)
t


# In[42]:


f = np.cos(t)
f


# In[83]:


plt.plot(t,f, color = "green")
plt.title("График f(t)")
plt.xlabel("Значения t")
plt.ylabel("Значения f")
plt.axis([0.5, 9.5, -2.5, 2.5])


# In[ ]:





# In[ ]:




